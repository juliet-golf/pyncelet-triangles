

# This file was *autogenerated* from the file invszego.sage
from sage.all_cmdline import *   # import sage library

_sage_const_p5 = RealNumber('.5'); _sage_const_p2 = RealNumber('.2'); _sage_const_p3 = RealNumber('.3'); _sage_const_p4 = RealNumber('.4'); _sage_const_p1 = RealNumber('.1'); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
z=var('z')
fn=[_sage_const_p5 *I,_sage_const_p2 ,_sage_const_p3 +_sage_const_p4 *I,-_sage_const_p2 -_sage_const_p5 *I,-_sage_const_p5 ,-_sage_const_p3 +_sage_const_p2 *I]
an=[_sage_const_p2 -_sage_const_p1 *I]
phi=_sage_const_1 
phic=_sage_const_1 
for f in fn: phi*=(z-f)
for f in fn: phic*=(_sage_const_1 -z*f)

for i in range(len(fn)): 
    __tmp__=var("z"); phi_1 = symbolic_expression((z*phi-conjugate(an[-_sage_const_1 ])*phic)/(_sage_const_1 -abs(an[-_sage_const_1 ]))).function(z)
    __tmp__=var("z"); phic_1 = symbolic_expression((phic-an[-_sage_const_1 ]*z*phi)/(_sage_const_1 -abs(an[-_sage_const_1 ]))).function(z)
    an.append(-conjugate(phi_1(_sage_const_0 )))
    phi=phi_1(z)
    phic=phic_1(z)

print(an)

